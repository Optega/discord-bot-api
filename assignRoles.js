require("dotenv").config();
const { Client, GatewayIntentBits } = require("discord.js");
const fs = require("fs");

const oldMembers = JSON.parse(fs.readFileSync("members.json", "utf-8"));

const client = new Client({
  intents: [GatewayIntentBits.Guilds, GatewayIntentBits.GuildMembers],
});

client.once("ready", async () => {
  console.log(`‚úÖ Logged in as ${client.user.tag}`);
});

client.on("guildMemberAdd", async (member) => {
  const userData = oldMembers.find((u) => u.id === member.user.id);
  if (!userData) {
    try {
      const duration = 7 * 24 * 60 * 60 * 1000; // 1 —Ç–∏–∂–¥–µ–Ω—å —É –º—Å
      const reason = "–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ –±–∞–∑—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤. –û—á—ñ–∫—É—î –ø–µ—Ä–µ–≤—ñ—Ä–∫—É.";

      await member.timeout(duration, reason);

      console.log(`üö´ ${member.user.tag} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ –±–∞–∑—ñ. –ó–∞—Å—Ç–æ—Å–æ–≤—É—î—Ç—å—Å—è —Ç–∏–º—á–∞—Å–æ–≤–∏–π –±–ª–æ–∫.`);
    } catch (err) {
      console.error(`‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—ñ timeout –¥–æ ${member.user.tag}:`, err);
    }

    return;
  }

  const guild = member.guild;
  const rolesToAssign = [];

  for (const roleName of userData.roles) {
    const role = guild.roles.cache.find((r) => r.name === roleName);
    if (role) rolesToAssign.push(role);
  }

  if (rolesToAssign.length > 0) {
    try {
      await member.roles.add(rolesToAssign);
      console.log(`‚úÖ –î–æ–¥–∞–Ω–æ —Ä–æ–ª—ñ ${rolesToAssign.map((r) => r.name).join(", ")} –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É ${member.user.tag}`);
    } catch (err) {
      console.error(`‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –¥–æ–¥–∞–≤–∞–Ω–Ω—ñ —Ä–æ–ª–µ–π ${member.user.tag}:`, err);
    }
  } else {
    console.log(`‚ÑπÔ∏è ${member.user.tag} –Ω–µ –º–∞—î –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏—Ö —Ä–æ–ª–µ–π.`);
  }
});

client.login(process.env.DISCORD_TOKEN);
